{"version":3,"file":"static/js/277.fe9654b9.chunk.js","mappings":"uQACA,EAAuB,wBAAvB,EAA2D,6B,SCQ5C,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9B,GAA4BD,EAAAA,EAAAA,IAAYE,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHN,EAASO,GACT,MAEF,IAAK,WACHL,EAAYK,GACZ,MAEF,QACE,OAEL,EAYD,OACE,kBAAMC,SAXa,SAAAJ,GAEnB,GADAA,EAAEK,iBACmB,KAAjBV,EAAMW,QAAqC,KAApBT,EAASS,OAClC,OAAOC,EAAAA,GAAAA,MAAY,8BAErBrB,GAASsB,EAAAA,EAAAA,IAAM,CAAEb,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,GACb,EAG+BW,UAAWC,EAAzC,WACE,SAACC,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,WACRC,MAAM,UACNC,KAAK,QACLb,KAAK,QACLC,MAAOR,EACPqB,SAAUjB,EACVU,UAAWC,EACXO,UAAQ,KAGV,SAACN,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,MAAM,UACNC,KAAK,WACLb,KAAK,WACLC,MAAON,EACPmB,SAAUjB,EACVU,UAAWC,EACXO,UAAQ,KAGR7B,IACA,SAAC8B,EAAA,EAAD,CAAQL,QAAQ,YAAYC,MAAM,UAAUK,KAAK,QAAQJ,KAAK,SAA9D,oBAIDvB,IAAU,uBAAIC,IACdL,IAAa,wCAGnB,C","sources":["webpack://react-homework-template/./src/components/Pages/LoginPage/LoginPage.module.css?8638","components/Pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginPage_form__UfgkB\",\"textField\":\"LoginPage_textField__nKPWN\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getIsLoading, getError } from '../../../Redux/Auth/authSelectors';\nimport { login } from '../../../Redux/Auth/authOperation';\nimport { toast } from 'react-toastify';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport style from '../LoginPage/LoginPage.module.css';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const { status, message } = useSelector(getError);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email.trim() === '' || password.trim() === '') {\n      return toast.error('Please fill in all fields!');\n    }\n    dispatch(login({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.form}>\n      <TextField\n        label=\"Email\"\n        variant=\"outlined\"\n        color=\"primary\"\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        className={style.textField}\n        required\n      />\n\n      <TextField\n        label=\"Password\"\n        variant=\"outlined\"\n        color=\"primary\"\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        className={style.textField}\n        required\n      />\n\n      {!isLoading && (\n        <Button variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\">\n          Log in\n        </Button>\n      )}\n      {status && <p>{message}</p>}\n      {isLoading && <p>...Loading</p>}\n    </form>\n  );\n}\n"],"names":["LoginPage","dispatch","useDispatch","isLoading","useSelector","getIsLoading","getError","status","message","useState","email","setEmail","password","setPassword","handleChange","e","target","name","value","onSubmit","preventDefault","trim","toast","login","className","style","TextField","label","variant","color","type","onChange","required","Button","size"],"sourceRoot":""}